{"version":3,"file":"static/js/264.53836f4b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/MoviesList.jsx","components/CenteredSpinner.jsx","api/tmdb.jsx","pages/Home.jsx","../node_modules/warning/warning.js","utils/constants.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListGroup as=\"ol\" numbered>\n      {movies.map(({ id, title }) => {\n        return (\n          <ListGroup.Item key={id} as=\"li\">\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;","import React from 'react';\nimport { Modal, Spinner } from 'react-bootstrap';\n\nconst CenteredSpinner = () => (\n    <Modal\n      show={true}\n      centered\n      fullscreen\n      contentClassName=\"bg-transparent shadow-none\"\n      backdropClassName=\"bg-dark\"\n    >\n      <Modal.Body\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: '100vh', backdropFilter: 'blur(2px)' }}\n      >\n        <Spinner animation=\"border\" role=\"status\">\n          {/* <span className=\"sr-only\">Loading...</span> */}\n        </Spinner>\n      </Modal.Body>\n    </Modal>\n  );\n  \n  export default CenteredSpinner;","import axios from 'axios';\nimport {\n  INIT_FETCH_CONFIG,\n  DEFAULT_QUERY_PARAMS_FOR_SEARCH,\n} from 'utils/constants';\n\nconst tmdb = axios.create(INIT_FETCH_CONFIG);\nlet apiConfigDetails = null;\n\nasync function getApiConfigDetails() {\n  const url = '/configuration';\n  try {\n    const response = await tmdb(url);\n    apiConfigDetails = response.data;\n    return response.data;\n  } catch (error) {\n    console.error(`Error in getting of API configuration:${error}`);\n  }\n}\n\ngetApiConfigDetails();\n\nexport function generateImageUrl(path, size) {\n  const baseUrl = apiConfigDetails.images.secure_base_url;\n  const url = baseUrl + size + path;\n  return url;\n}\n\nexport async function getTrending(timeWindow = 'day', language = 'en-US') {\n  const url = `/trending/movie/${timeWindow}`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieBySearch(query, page) {\n  const url = `/search/movie`;\n  const params = { ...DEFAULT_QUERY_PARAMS_FOR_SEARCH, query, page };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetailsById(movieId, language = 'en-US') {\n  const url = `/movie/${movieId}`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data;\n  } catch (error) {\n    console.error(`Error loading movie details: ${error.message}`);\n    throw error;\n  }\n}\n\nexport async function getCast(movieId, language = 'en-US') {\n  const url = `/movie/${movieId}/credits`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getReviews(movieId, page = 1, language = 'en-US') {\n  const url = `/movie/${movieId}/reviews`;\n  const params = { language, page };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}","import { useEffect, useState } from \"react\";\nimport { getTrending } from \"api/tmdb\";\nimport MoviesList from \"components/MoviesList\";\nimport CenteredSpinner from \"components/CenteredSpinner\";\nimport { states } from \"utils/constants\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [state, setState] = useState(states.LOADING);\n\n  useEffect(() => {\n    getTrending()\n      .then((data) => {\n        setMovies(data);\n        setState(states.LOADED);\n      })\n      .catch((error) => {\n        setState(states.ERROR);\n      });\n  }, []);\n\n  switch (state) {\n    case states.LOADING:\n      return <CenteredSpinner />;\n\n    case states.LOADED:\n      return (\n        <>\n          <h1 className=\"mb-3\">Trending today</h1>\n          <MoviesList movies={movies} />\n        </>\n      );\n\n    case states.ERROR:\n      return <p>Oops, something went wrong. Please try again later.</p>;\n\n    default:\n      return null;\n  }\n};\n\nexport default Home;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const INIT_FETCH_CONFIG = {\n  method: 'GET',\n  baseURL: BASE_URL,\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGFhNzY1ZjlhMzVhOTdiNTBiZjI5NmNkZGIzZTBhNyIsInN1YiI6IjY0NTE4NGUwMzNhZDhmMDBmZWYyN2FhNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ryw4dh3H0xPOea1Y2cbKZvI8bFHdhr2M3oPtuPEBQes',\n  },\n};\n\nexport const DEFAULT_QUERY_PARAMS_FOR_SEARCH = {\n  include_adult: false,\n  language: 'en-US',\n  page: 1,\n};\n\nexport const states = {\n  NO_RESULTS: 'NO_RESULTS',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR',\n};\n\nexport const dateFormatOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n"],"names":["ListGroupItem","React","_ref","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","navItemProps","meta","useNavItem","key","makeEventKey","href","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","initialBsPrefix","horizontal","numbered","controlledProps","useUncontrolled","activeKey","horizontalVariant","BaseNav","Object","assign","Item","movies","location","useLocation","children","map","_ref2","id","title","NavLink","to","state","from","CenteredSpinner","Modal","show","centered","fullscreen","contentClassName","backdropClassName","Body","style","minHeight","backdropFilter","Spinner","animation","role","tmdb","axios","create","INIT_FETCH_CONFIG","apiConfigDetails","generateImageUrl","path","size","images","secure_base_url","async","getTrending","url","arguments","length","params","language","data","results","error","console","getMovieBySearch","query","page","DEFAULT_QUERY_PARAMS_FOR_SEARCH","getMovieDetailsById","movieId","message","getCast","cast","getReviews","response","getApiConfigDetails","Home","setMovies","useState","setState","states","LOADING","useEffect","then","LOADED","catch","ERROR","_jsxs","_Fragment","MoviesList","warning","module","exports","method","baseURL","headers","accept","Authorization","include_adult","NO_RESULTS","dateFormatOptions","year","month","day"],"sourceRoot":""}